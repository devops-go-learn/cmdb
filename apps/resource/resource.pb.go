// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: apps/resource/pb/resource.proto

package resource

import (
	request "github.com/infraboard/mcube/http/request"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vendor int32

const (
	Vendor_ALIYUN  Vendor = 0
	Vendor_TENCENT Vendor = 1
	Vendor_HUAWEI  Vendor = 2
	Vendor_VSPHERE Vendor = 3
	Vendor_AMAZON  Vendor = 4
)

// Enum value maps for Vendor.
var (
	Vendor_name = map[int32]string{
		0: "ALIYUN",
		1: "TENCENT",
		2: "HUAWEI",
		3: "VSPHERE",
		4: "AMAZON",
	}
	Vendor_value = map[string]int32{
		"ALIYUN":  0,
		"TENCENT": 1,
		"HUAWEI":  2,
		"VSPHERE": 3,
		"AMAZON":  4,
	}
)

func (x Vendor) Enum() *Vendor {
	p := new(Vendor)
	*p = x
	return p
}

func (x Vendor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vendor) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_resource_pb_resource_proto_enumTypes[0].Descriptor()
}

func (Vendor) Type() protoreflect.EnumType {
	return &file_apps_resource_pb_resource_proto_enumTypes[0]
}

func (x Vendor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vendor.Descriptor instead.
func (Vendor) EnumDescriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{0}
}

type Type int32

const (
	Type_HOST Type = 0
	Type_RDS  Type = 1
	Type_BILL Type = 99
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "HOST",
		1:  "RDS",
		99: "BILL",
	}
	Type_value = map[string]int32{
		"HOST": 0,
		"RDS":  1,
		"BILL": 99,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_resource_pb_resource_proto_enumTypes[1].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_apps_resource_pb_resource_proto_enumTypes[1]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{1}
}

// 使用方式
type UsageMode int32

const (
	// 共享使用
	UsageMode_SHARED UsageMode = 0
	// 独占使用
	UsageMode_MONOPOLY UsageMode = 1
)

// Enum value maps for UsageMode.
var (
	UsageMode_name = map[int32]string{
		0: "SHARED",
		1: "MONOPOLY",
	}
	UsageMode_value = map[string]int32{
		"SHARED":   0,
		"MONOPOLY": 1,
	}
)

func (x UsageMode) Enum() *UsageMode {
	p := new(UsageMode)
	*p = x
	return p
}

func (x UsageMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsageMode) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_resource_pb_resource_proto_enumTypes[2].Descriptor()
}

func (UsageMode) Type() protoreflect.EnumType {
	return &file_apps_resource_pb_resource_proto_enumTypes[2]
}

func (x UsageMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsageMode.Descriptor instead.
func (UsageMode) EnumDescriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{2}
}

type TagType int32

const (
	// 用户自定义标签, 允许用户修改
	TagType_USER TagType = 0
	// 系统使用标签, 禁止用户修改
	TagType_SYSTEM TagType = 1
)

// Enum value maps for TagType.
var (
	TagType_name = map[int32]string{
		0: "USER",
		1: "SYSTEM",
	}
	TagType_value = map[string]int32{
		"USER":   0,
		"SYSTEM": 1,
	}
)

func (x TagType) Enum() *TagType {
	p := new(TagType)
	*p = x
	return p
}

func (x TagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TagType) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_resource_pb_resource_proto_enumTypes[3].Descriptor()
}

func (TagType) Type() protoreflect.EnumType {
	return &file_apps_resource_pb_resource_proto_enumTypes[3]
}

func (x TagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TagType.Descriptor instead.
func (TagType) EnumDescriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{3}
}

type UpdateAction int32

const (
	// 添加
	UpdateAction_ADD UpdateAction = 0
	// 移除
	UpdateAction_REMOVE UpdateAction = 1
	// 更新标签, 只允许更新描述和权重
	UpdateAction_UPDATE UpdateAction = 2
)

// Enum value maps for UpdateAction.
var (
	UpdateAction_name = map[int32]string{
		0: "ADD",
		1: "REMOVE",
		2: "UPDATE",
	}
	UpdateAction_value = map[string]int32{
		"ADD":    0,
		"REMOVE": 1,
		"UPDATE": 2,
	}
)

func (x UpdateAction) Enum() *UpdateAction {
	p := new(UpdateAction)
	*p = x
	return p
}

func (x UpdateAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateAction) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_resource_pb_resource_proto_enumTypes[4].Descriptor()
}

func (UpdateAction) Type() protoreflect.EnumType {
	return &file_apps_resource_pb_resource_proto_enumTypes[4]
}

func (x UpdateAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateAction.Descriptor instead.
func (UpdateAction) EnumDescriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{4}
}

type ResourceSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"items"
	Items []*Resource `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
	// @gotags: json:"total"
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *ResourceSet) Reset() {
	*x = ResourceSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSet) ProtoMessage() {}

func (x *ResourceSet) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSet.ProtoReflect.Descriptor instead.
func (*ResourceSet) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceSet) GetItems() []*Resource {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResourceSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源元数据信息
	// @gotags: json:"base"
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	// 资源信息
	// @gotags: json:"information"
	Information *Information `protobuf:"bytes,2,opt,name=information,proto3" json:"information"`
	// 资源释放计划
	// @gotags: json:"release_plan"
	ReleasePlan *ReleasePlan `protobuf:"bytes,3,opt,name=release_plan,json=releasePlan,proto3" json:"release_plan"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{1}
}

func (x *Resource) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Resource) GetInformation() *Information {
	if x != nil {
		return x.Information
	}
	return nil
}

func (x *Resource) GetReleasePlan() *ReleasePlan {
	if x != nil {
		return x.ReleasePlan
	}
	return nil
}

// 资源释放计划
type ReleasePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 释放原因
	// @gotags: json:"reason"
	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason"`
	// 是否立即释放
	// @gotags: json:"immediately"
	Immediately bool `protobuf:"varint,2,opt,name=immediately,proto3" json:"immediately"`
	// 计划时间
	// @gotags: json:"plan_at"
	PlanAt int64 `protobuf:"varint,3,opt,name=plan_at,json=planAt,proto3" json:"plan_at"`
	// 执行时间
	// @gotags: json:"exec_at"
	ExecAt int64 `protobuf:"varint,4,opt,name=exec_at,json=execAt,proto3" json:"exec_at"`
	// 释放前 提前几天通知, 过期后 云商会自动释放的也需要提前通知
	// @gotags: json:"notice_before_days"
	NoticeBeforeDays int64 `protobuf:"varint,5,opt,name=notice_before_days,json=noticeBeforeDays,proto3" json:"notice_before_days"`
	// 资源释放后, 什么时候销毁该数据
	// @gotags: json:"destory_at"
	DestoryAt int64 `protobuf:"varint,6,opt,name=destory_at,json=destoryAt,proto3" json:"destory_at"`
}

func (x *ReleasePlan) Reset() {
	*x = ReleasePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePlan) ProtoMessage() {}

func (x *ReleasePlan) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePlan.ProtoReflect.Descriptor instead.
func (*ReleasePlan) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{2}
}

func (x *ReleasePlan) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ReleasePlan) GetImmediately() bool {
	if x != nil {
		return x.Immediately
	}
	return false
}

func (x *ReleasePlan) GetPlanAt() int64 {
	if x != nil {
		return x.PlanAt
	}
	return 0
}

func (x *ReleasePlan) GetExecAt() int64 {
	if x != nil {
		return x.ExecAt
	}
	return 0
}

func (x *ReleasePlan) GetNoticeBeforeDays() int64 {
	if x != nil {
		return x.NoticeBeforeDays
	}
	return 0
}

func (x *ReleasePlan) GetDestoryAt() int64 {
	if x != nil {
		return x.DestoryAt
	}
	return 0
}

type Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 全局唯一Id, 直接使用个云商自己的Id
	// @gotags: json:"id" validate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required"`
	// 同步时间
	// @gotags: json:"sync_at"
	SyncAt int64 `protobuf:"varint,2,opt,name=sync_at,json=syncAt,proto3" json:"sync_at"`
	// 用于同步的凭证ID
	// @gotags: json:"secret_id"
	SecretId string `protobuf:"bytes,3,opt,name=secret_id,json=secretId,proto3" json:"secret_id"`
	// 厂商
	// @gotags: json:"vendor"
	Vendor Vendor `protobuf:"varint,4,opt,name=vendor,proto3,enum=infraboard.cmdb.resource.Vendor" json:"vendor"`
	// 资源类型
	// @gotags: json:"resource_type"
	ResourceType Type `protobuf:"varint,5,opt,name=resource_type,json=resourceType,proto3,enum=infraboard.cmdb.resource.Type" json:"resource_type"`
	// 地域
	// @gotags: json:"region"
	Region string `protobuf:"bytes,6,opt,name=region,proto3" json:"region"`
	// 区域
	// @gotags: json:"zone"
	Zone string `protobuf:"bytes,7,opt,name=zone,proto3" json:"zone"`
	// 创建时间
	// @gotags: json:"create_at"
	CreateAt int64 `protobuf:"varint,8,opt,name=create_at,json=createAt,proto3" json:"create_at"`
	// 基础数据Hash
	// @gotags: json:"resource_hash"
	ResourceHash string `protobuf:"bytes,10,opt,name=resource_hash,json=resourceHash,proto3" json:"resource_hash"`
	// 描述数据Hash
	// @gotags: json:"describe_hash"
	DescribeHash string `protobuf:"bytes,11,opt,name=describe_hash,json=describeHash,proto3" json:"describe_hash"`
	// Resource信息释放有变化
	// @gotags: json:"resource_hash_changed,omitempty"
	ResourceHashChanged bool `protobuf:"varint,12,opt,name=resource_hash_changed,json=resourceHashChanged,proto3" json:"resource_hash_changed,omitempty"`
	// Describe信息释放有变化
	// @gotags: json:"describe_hash_changed,omitempty"
	DescribeHashChanged bool `protobuf:"varint,13,opt,name=describe_hash_changed,json=describeHashChanged,proto3" json:"describe_hash_changed,omitempty"`
	// 资源所属空间
	// @gotags: json:"namespace"
	Namespace string `protobuf:"bytes,14,opt,name=namespace,proto3" json:"namespace"`
	// 资源所属环境
	// @gotags: json:"env"
	Env string `protobuf:"bytes,15,opt,name=env,proto3" json:"env"`
	// 使用方式
	// @gotags: json:"usage_mode"
	UsageMode UsageMode `protobuf:"varint,16,opt,name=usage_mode,json=usageMode,proto3,enum=infraboard.cmdb.resource.UsageMode" json:"usage_mode"`
	// 资源所属域
	// @gotags: json:"domain"
	Domain string `protobuf:"bytes,17,opt,name=domain,proto3" json:"domain"`
}

func (x *Base) Reset() {
	*x = Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base) ProtoMessage() {}

func (x *Base) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base.ProtoReflect.Descriptor instead.
func (*Base) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{3}
}

func (x *Base) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Base) GetSyncAt() int64 {
	if x != nil {
		return x.SyncAt
	}
	return 0
}

func (x *Base) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *Base) GetVendor() Vendor {
	if x != nil {
		return x.Vendor
	}
	return Vendor_ALIYUN
}

func (x *Base) GetResourceType() Type {
	if x != nil {
		return x.ResourceType
	}
	return Type_HOST
}

func (x *Base) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Base) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Base) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Base) GetResourceHash() string {
	if x != nil {
		return x.ResourceHash
	}
	return ""
}

func (x *Base) GetDescribeHash() string {
	if x != nil {
		return x.DescribeHash
	}
	return ""
}

func (x *Base) GetResourceHashChanged() bool {
	if x != nil {
		return x.ResourceHashChanged
	}
	return false
}

func (x *Base) GetDescribeHashChanged() bool {
	if x != nil {
		return x.DescribeHashChanged
	}
	return false
}

func (x *Base) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Base) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Base) GetUsageMode() UsageMode {
	if x != nil {
		return x.UsageMode
	}
	return UsageMode_SHARED
}

func (x *Base) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type Information struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 过期时间
	// @gotags: json:"expire_at"
	ExpireAt int64 `protobuf:"varint,1,opt,name=expire_at,json=expireAt,proto3" json:"expire_at"`
	// 种类
	// @gotags: json:"category"
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category"`
	// 规格
	// @gotags: json:"type"
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	// 名称
	// @gotags: json:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	// 描述
	// @gotags: json:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	// 服务商中的状态
	// @gotags: json:"status"
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	// 标签
	// @gotags: json:"tags"
	Tags []*Tag `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags"`
	// 更新时间
	// @gotags: json:"update_at"
	UpdateAt int64 `protobuf:"varint,8,opt,name=update_at,json=updateAt,proto3" json:"update_at"`
	// 同步的账号
	// @gotags: json:"sync_account"
	SyncAccount string `protobuf:"bytes,9,opt,name=sync_account,json=syncAccount,proto3" json:"sync_account"`
	// 公网IP
	// @gotags: json:"public_ip"
	PublicIp []string `protobuf:"bytes,10,rep,name=public_ip,json=publicIp,proto3" json:"public_ip"`
	// 内网IP
	// @gotags: json:"private_ip"
	PrivateIp []string `protobuf:"bytes,11,rep,name=private_ip,json=privateIp,proto3" json:"private_ip"`
	// 实例付费方式
	// @gotags: json:"pay_type"
	PayType string `protobuf:"bytes,12,opt,name=pay_type,json=payType,proto3" json:"pay_type"`
}

func (x *Information) Reset() {
	*x = Information{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Information) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Information) ProtoMessage() {}

func (x *Information) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Information.ProtoReflect.Descriptor instead.
func (*Information) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{4}
}

func (x *Information) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *Information) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Information) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Information) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Information) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Information) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Information) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Information) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *Information) GetSyncAccount() string {
	if x != nil {
		return x.SyncAccount
	}
	return ""
}

func (x *Information) GetPublicIp() []string {
	if x != nil {
		return x.PublicIp
	}
	return nil
}

func (x *Information) GetPrivateIp() []string {
	if x != nil {
		return x.PrivateIp
	}
	return nil
}

func (x *Information) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标签的Id
	// @gotags: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 标签的类型
	// @gotags: json:"type"
	Type TagType `protobuf:"varint,2,opt,name=type,proto3,enum=infraboard.cmdb.resource.TagType" json:"type"`
	// 标签的Key
	// @gotags: json:"key"
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key"`
	// 标签的值
	// @gotags: json:"value"
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value"`
	// 标签的值的描述, 通常用于展示
	// @gotags: json:"describe"
	Describe string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe"`
	// 标签权重, 针对同一个key, 多个value场景, 默认值1
	// @gotags: json:"weight"
	Weight int32 `protobuf:"varint,6,opt,name=weight,proto3" json:"weight"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{5}
}

func (x *Tag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetType() TagType {
	if x != nil {
		return x.Type
	}
	return TagType_USER
}

func (x *Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Tag) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *Tag) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	// @gotags: json:"page"
	Page *request.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page"`
	// 资源所属域
	// @gotags: json:"domain"
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain"`
	// 资源所属空间
	// @gotags: json:"namespace"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace"`
	// 资源所属环境
	// @gotags: json:"env"
	Env string `protobuf:"bytes,4,opt,name=env,proto3" json:"env"`
	// 使用方式
	// @gotags: json:"usage_mode"
	UsageMode *UsageMode `protobuf:"varint,5,opt,name=usage_mode,json=usageMode,proto3,enum=infraboard.cmdb.resource.UsageMode,oneof" json:"usage_mode"`
	// 厂商
	// @gotags: json:"vendor"
	Vendor *Vendor `protobuf:"varint,6,opt,name=vendor,proto3,enum=infraboard.cmdb.resource.Vendor,oneof" json:"vendor"`
	// 同步的账号
	// @gotags: json:"sync_account"
	SyncAccount string `protobuf:"bytes,7,opt,name=sync_account,json=syncAccount,proto3" json:"sync_account"`
	// 资源类型
	// @gotags: json:"type"
	Type *Type `protobuf:"varint,8,opt,name=type,proto3,enum=infraboard.cmdb.resource.Type,oneof" json:"type"`
	// 服务商中的状态
	// @gotags: json:"status"
	Status string `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	// 账单月当时标签
	// @gotags: json:"tags"
	Tags []*Tag `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags"`
	// 关键字参数
	// @gotags: json:"keywords"
	Keywords string `protobuf:"bytes,14,opt,name=keywords,proto3" json:"keywords"`
	// 是否精确匹配
	// @gotags: json:"exact_match"
	ExactMatch bool `protobuf:"varint,15,opt,name=exact_match,json=exactMatch,proto3" json:"exact_match"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{6}
}

func (x *SearchRequest) GetPage() *request.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SearchRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SearchRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SearchRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *SearchRequest) GetUsageMode() UsageMode {
	if x != nil && x.UsageMode != nil {
		return *x.UsageMode
	}
	return UsageMode_SHARED
}

func (x *SearchRequest) GetVendor() Vendor {
	if x != nil && x.Vendor != nil {
		return *x.Vendor
	}
	return Vendor_ALIYUN
}

func (x *SearchRequest) GetSyncAccount() string {
	if x != nil {
		return x.SyncAccount
	}
	return ""
}

func (x *SearchRequest) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_HOST
}

func (x *SearchRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SearchRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SearchRequest) GetExactMatch() bool {
	if x != nil {
		return x.ExactMatch
	}
	return false
}

type UpdateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源id
	// @gotags: json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 资源id
	// @gotags: json:"action"
	Action UpdateAction `protobuf:"varint,2,opt,name=action,proto3,enum=infraboard.cmdb.resource.UpdateAction" json:"action"`
	// 需要添加的资源标签
	// @gotags: json:"tags"
	Tags []*Tag `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags"`
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_resource_pb_resource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_resource_pb_resource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_apps_resource_pb_resource_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTagRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTagRequest) GetAction() UpdateAction {
	if x != nil {
		return x.Action
	}
	return UpdateAction_ADD
}

func (x *UpdateTagRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_apps_resource_pb_resource_proto protoreflect.FileDescriptor

var file_apps_resource_pb_resource_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f,
	0x70, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x67, 0x65,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x0b, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd1, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0xc6,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6d, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x41,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x74, 0x22, 0xd2, 0x04, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x12, 0x43, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x61, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76,
	0x12, 0x42, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xf2, 0x02, 0x0a,
	0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x79, 0x6e, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xa8, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x9e, 0x04, 0x0a,
	0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x47,
	0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x48, 0x01, 0x52, 0x06, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79,
	0x6e, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x61,
	0x63, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x65, 0x78, 0x61, 0x63, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x95, 0x01,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x2a, 0x46, 0x0a, 0x06, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12,
	0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x49, 0x59, 0x55, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54,
	0x45, 0x4e, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x55, 0x41, 0x57,
	0x45, 0x49, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x53, 0x50, 0x48, 0x45, 0x52, 0x45, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x41, 0x5a, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0x23, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x52, 0x44, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x49, 0x4c, 0x4c,
	0x10, 0x63, 0x2a, 0x25, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x4f, 0x4e, 0x4f, 0x50, 0x4f, 0x4c, 0x59, 0x10, 0x01, 0x2a, 0x1f, 0x0a, 0x07, 0x54, 0x61, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x2a, 0x2f, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44,
	0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32, 0xc0, 0x01, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63,
	0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x5b, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x2a,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x63, 0x6d, 0x64, 0x62, 0x2f, 0x61, 0x70, 0x70,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_apps_resource_pb_resource_proto_rawDescOnce sync.Once
	file_apps_resource_pb_resource_proto_rawDescData = file_apps_resource_pb_resource_proto_rawDesc
)

func file_apps_resource_pb_resource_proto_rawDescGZIP() []byte {
	file_apps_resource_pb_resource_proto_rawDescOnce.Do(func() {
		file_apps_resource_pb_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_resource_pb_resource_proto_rawDescData)
	})
	return file_apps_resource_pb_resource_proto_rawDescData
}

var file_apps_resource_pb_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_apps_resource_pb_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_apps_resource_pb_resource_proto_goTypes = []interface{}{
	(Vendor)(0),                 // 0: infraboard.cmdb.resource.Vendor
	(Type)(0),                   // 1: infraboard.cmdb.resource.Type
	(UsageMode)(0),              // 2: infraboard.cmdb.resource.UsageMode
	(TagType)(0),                // 3: infraboard.cmdb.resource.TagType
	(UpdateAction)(0),           // 4: infraboard.cmdb.resource.UpdateAction
	(*ResourceSet)(nil),         // 5: infraboard.cmdb.resource.ResourceSet
	(*Resource)(nil),            // 6: infraboard.cmdb.resource.Resource
	(*ReleasePlan)(nil),         // 7: infraboard.cmdb.resource.ReleasePlan
	(*Base)(nil),                // 8: infraboard.cmdb.resource.Base
	(*Information)(nil),         // 9: infraboard.cmdb.resource.Information
	(*Tag)(nil),                 // 10: infraboard.cmdb.resource.Tag
	(*SearchRequest)(nil),       // 11: infraboard.cmdb.resource.SearchRequest
	(*UpdateTagRequest)(nil),    // 12: infraboard.cmdb.resource.UpdateTagRequest
	(*request.PageRequest)(nil), // 13: infraboard.mcube.page.PageRequest
}
var file_apps_resource_pb_resource_proto_depIdxs = []int32{
	6,  // 0: infraboard.cmdb.resource.ResourceSet.items:type_name -> infraboard.cmdb.resource.Resource
	8,  // 1: infraboard.cmdb.resource.Resource.base:type_name -> infraboard.cmdb.resource.Base
	9,  // 2: infraboard.cmdb.resource.Resource.information:type_name -> infraboard.cmdb.resource.Information
	7,  // 3: infraboard.cmdb.resource.Resource.release_plan:type_name -> infraboard.cmdb.resource.ReleasePlan
	0,  // 4: infraboard.cmdb.resource.Base.vendor:type_name -> infraboard.cmdb.resource.Vendor
	1,  // 5: infraboard.cmdb.resource.Base.resource_type:type_name -> infraboard.cmdb.resource.Type
	2,  // 6: infraboard.cmdb.resource.Base.usage_mode:type_name -> infraboard.cmdb.resource.UsageMode
	10, // 7: infraboard.cmdb.resource.Information.tags:type_name -> infraboard.cmdb.resource.Tag
	3,  // 8: infraboard.cmdb.resource.Tag.type:type_name -> infraboard.cmdb.resource.TagType
	13, // 9: infraboard.cmdb.resource.SearchRequest.page:type_name -> infraboard.mcube.page.PageRequest
	2,  // 10: infraboard.cmdb.resource.SearchRequest.usage_mode:type_name -> infraboard.cmdb.resource.UsageMode
	0,  // 11: infraboard.cmdb.resource.SearchRequest.vendor:type_name -> infraboard.cmdb.resource.Vendor
	1,  // 12: infraboard.cmdb.resource.SearchRequest.type:type_name -> infraboard.cmdb.resource.Type
	10, // 13: infraboard.cmdb.resource.SearchRequest.tags:type_name -> infraboard.cmdb.resource.Tag
	4,  // 14: infraboard.cmdb.resource.UpdateTagRequest.action:type_name -> infraboard.cmdb.resource.UpdateAction
	10, // 15: infraboard.cmdb.resource.UpdateTagRequest.tags:type_name -> infraboard.cmdb.resource.Tag
	11, // 16: infraboard.cmdb.resource.Service.Search:input_type -> infraboard.cmdb.resource.SearchRequest
	12, // 17: infraboard.cmdb.resource.Service.UpdateTag:input_type -> infraboard.cmdb.resource.UpdateTagRequest
	5,  // 18: infraboard.cmdb.resource.Service.Search:output_type -> infraboard.cmdb.resource.ResourceSet
	6,  // 19: infraboard.cmdb.resource.Service.UpdateTag:output_type -> infraboard.cmdb.resource.Resource
	18, // [18:20] is the sub-list for method output_type
	16, // [16:18] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_apps_resource_pb_resource_proto_init() }
func file_apps_resource_pb_resource_proto_init() {
	if File_apps_resource_pb_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_resource_pb_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_resource_pb_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_resource_pb_resource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_resource_pb_resource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_resource_pb_resource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Information); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_resource_pb_resource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_resource_pb_resource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_resource_pb_resource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_apps_resource_pb_resource_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_resource_pb_resource_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apps_resource_pb_resource_proto_goTypes,
		DependencyIndexes: file_apps_resource_pb_resource_proto_depIdxs,
		EnumInfos:         file_apps_resource_pb_resource_proto_enumTypes,
		MessageInfos:      file_apps_resource_pb_resource_proto_msgTypes,
	}.Build()
	File_apps_resource_pb_resource_proto = out.File
	file_apps_resource_pb_resource_proto_rawDesc = nil
	file_apps_resource_pb_resource_proto_goTypes = nil
	file_apps_resource_pb_resource_proto_depIdxs = nil
}
