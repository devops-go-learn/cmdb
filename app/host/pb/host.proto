syntax = "proto3";

package infraboard.cmdb.host;
option go_package="github.com/infraboard/cmdb/app/host";

import "app/resource/pb/resource.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";

service Service {
    rpc SaveHost(Host) returns(Host) {}
    rpc QueryHost(QueryHostRequest) returns(HostSet) {}
    rpc UpdateHost(UpdateHostRequest) returns(Host) {}
    rpc DescribeHost(DescribeHostRequest) returns(Host) {}
    rpc DeleteHost(DeleteHostRequest) returns(Host) {}
}

enum UpdateMode {
    PUT = 0;
    PATCH = 1;
}

message Host {
    infraboard.cmdb.resource.Base base = 1;
    infraboard.cmdb.resource.Information information = 2;
    infraboard.cmdb.resource.Management management = 3;
    Describe describe = 4;
}

message Describe {
    // 关联Resource
    string resource_id = 1;
    // 核数
    int64 cpu = 2;
    // 内存
    int64 memory = 3;
    // GPU数量
    int32 gpu_amount = 4;
    // GPU类型
    string gpu_spec = 5;
    // 操作系统类型，分为Windows和Linux
    string os_type = 6;
    // 操作系统名称
    string os_name = 7;
    // 序列号
    string serial_number = 8;
    // 镜像ID
    string image_id = 9;
    // 公网出带宽最大值，单位为 Mbps
    int64 internet_max_bandwidth_out = 10;
    // 公网入带宽最大值，单位为 Mbps
    int64 internet_max_bandwidth_in = 11;
    // 秘钥对名称
    repeated string key_pair_name = 12;
    // 安全组  采用逗号分隔
    repeated string security_groups = 13;
}

message QueryHostRequest {
    // 分页参数
    // @gotags: json:"page"
    infraboard.mcube.page.PageRequest page = 1;
    // 关键字参数
    // @gotags: json:"keywords"
    string keywords = 2;
}

message HostSet {
    repeated Host items = 1;
    int64 total = 2;
}

message UpdateHostRequest {
    // @gotags: json:"id" validate:"required"
    string id = 1;
    // @gotags: json:"update_mode"
    UpdateMode update_mode = 2;
    // @gotags: json:"data" validate:"required"
    UpdateHostData update_host_data = 3;
}

message UpdateHostData {
    infraboard.cmdb.resource.Information information = 1;
    Describe describe = 2;
}

enum DescribeBy {
    HOST_ID = 0;
    INSTANCE_ID = 1;
}

message DescribeHostRequest {
    // @gotags: json:"describe_by"
    DescribeBy describe_by = 1;
    // @gotags: json:"value" validate:"required"
    string value = 2;

}

message DeleteHostRequest {
    // @gotags: json:"id" validate:"required"
    string id = 1;
}